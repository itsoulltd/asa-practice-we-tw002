{
	"name": "BronzeToSilverNotebook",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "7704189d-0ddc-481d-b9b6-bab5bccd920b"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql.functions import *"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#StorageAccount = \"dgdnastwedev\"\r\n",
					"#TargetContainer = \"data\"\r\n",
					"#Path = 'Bronze/PDW/PDW_Journal_Database_Codes.parquet'\r\n",
					"#SilverDeltaPath= \"Silver/PDW/PDW_Database_Journal_Codes\"\r\n",
					"ReadPath  = 'abfss://' + TargetContainer + '@' + StorageAccount + '.dfs.core.windows.net/' + Path\r\n",
					"WritePath =  'abfss://' + TargetContainer + '@' + StorageAccount + '.dfs.core.windows.net/' + SilverDeltaPath"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df = spark.read.parquet(ReadPath)\r\n",
					"print(df)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#Cleansing - Clean unwanted spaces.\r\n",
					"\r\n",
					"for column in df.columns:\r\n",
					"        df = df.withColumn(column, rtrim(ltrim(col(column))))\r\n",
					"\r\n",
					"# Remove any null rows\r\n",
					"df = df.dropna()\r\n",
					"\r\n",
					"# Remove duplicate records if any\r\n",
					"df = df.dropDuplicates()"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#Write to SilverDeltaPath\r\n",
					"print(WritePath)\r\n",
					"df.write.format('delta').option('overwriteSchema', 'true').mode('overwrite').save(WritePath)"
				],
				"execution_count": null
			}
		]
	}
}